@page
@model RegisterModel
@{
	ViewData["Title"] = "Register";
}
<article>
	<h1>@ViewData["Title"]</h1>

	<div class="row">
		<div class="col-md-4">
			<section class="form-section">
				<form id="account" method="post">
					<hr class="form-divider" />
					<div class="form-container">
						<div class="input-wrapper">
							<label for="Input.UserName">Username</label>
							<input asp-for="Input.UserName" class="form-control" autocomplete="username" aria-required="true" placeholder="Username**" />
							<span asp-validation-for="Input.UserName" class="text-danger"></span>
						</div>
						<br />
						<div class="input-wrapper">
							<label for="Input.Email">Email address</label>
							<input asp-for="Input.Email" class="form-control" autocomplete="email" aria-required="true" placeholder="Email address**" />
							<span asp-validation-for="Input.Email" class="text-danger"></span>
						</div>
						<br />

						<div class="password-wrapper input-wrapper">
							<label for="Input.Password">Password</label>
							<input asp-for="Input.Password" type="password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Password**" />
							<img src="~/visibility-off.png" class="toggle-password-img" toggle="#Input_Password" alt="Toggle Password Visibility">
							<span asp-validation-for="Input.Password" class="text-danger"></span>
						</div>
						<br />
						@* <div class="password-wrapper">
						<input asp-for="Input.ConfirmPassword" type="password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Confirm Password**" />
						<img src="~/visibility-off.png" class="toggle-password-img" toggle="#Input_ConfirmPassword" alt="Toggle Password Visibility">
						<span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
						</div> *@
						<br />
						<button id="login-submit" type="submit" class="submit-button">Register</button>
					</div>
					<hr class="form-divider" />
				</form>
			</section>
		</div>
	</div>
</article>
@section Scripts {
	<partial name="_ValidationScriptsPartial" />
	<script>
		document.addEventListener("DOMContentLoaded", function ()
		{
			const toggleIcons = document.querySelectorAll(".toggle-password-img");
			toggleIcons.forEach(function (icon)
			{
				icon.addEventListener("click", function ()
				{
					const inputId = this.getAttribute("toggle").substring(1);
					const inputElement = document.getElementById(inputId);
					if (inputElement)
					{
						if (inputElement.type === "password")
						{
							inputElement.type = "text";
						} else
						{
							inputElement.type = "password";
						}
					} else
					{
						console.log("No element found with ID: ", inputId);
					}
				});
			});
		});
	</script>
}


<style>
	.form-section
	{
		display: flex;
		flex-direction: column;
		align-items: center;
		width: 100%;
		padding: 1rem;
	}

	.form-divider
	{
		border-color: #ccc;
		margin-bottom: 1.5rem;
	}

	.form-container
	{
		display: flex;
		flex-direction: column;
		align-items: center;
		width: calc(100%);
		box-shadow: 0 4px 8px rgba(0,0,0,0.1);
		border-radius: 0.5rem;
		margin: 0 auto;
		padding: 2rem;
	}

	input
	{
		border-color: darkgreen;
		padding: 0.75rem;
		border: 1px solid #ccc;
		border-radius: 0.5rem;
		transition: all 0.3s ease;
		font-size: 1rem;
		width: 100%;
	}

	.form-input:hover,
	.form-input:focus
	{
		border-color: #00FF00;
		box-shadow: 0 0 0.5rem rgba(0, 123, 255, 0.25);
	}

	.submit-button
	{
		text-align: center;
		background-color: #32CD32;
		color: #fff;
		padding: 0.75rem 1.5rem;
		border: none;
		border-radius: 0.5rem;
		font-size: 1rem;
		cursor: pointer;
		transition: all 0.3s ease;
		width: 100%;
	}

		.submit-button:hover
		{
			background-color: #00FF00;
			box-shadow: 0 0 0.5rem rgba(0, 123, 255, 0.25);
		}

	.password-wrapper
	{
		position: relative;
	}

	.toggle-password-img
	{
		position: absolute;
		right: 1rem;
		top: 50%;
		transform: translateY(-50%);
		cursor: pointer;
		z-index: 10;
		width: 20px;
		height: 20px;
	}

</style>

@* <div class="col-md-6 col-md-offset-2">
    <section>
        <h3>Use another service to register.</h3>
        <hr />
        @{
            if ((Model.ExternalLogins?.Count ?? 0) == 0)
            {
                <div>
                    <p>
                        There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">
                            article
                            about setting up this ASP.NET application to support logging in via external services
                        </a>.
                    </p>
                </div>
            }
            else
            {
                <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                    <div>
                        <p>
                            @foreach (var provider in Model.ExternalLogins!)
                            {
                                <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                            }
                        </p>
                    </div>
                </form>
            }
        }
    </section>
</div> *@