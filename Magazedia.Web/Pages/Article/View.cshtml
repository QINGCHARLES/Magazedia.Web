@page
@using Microsoft.AspNetCore.Http;
@using WikiWikiWorld.Models;
@using Magazedia;
@inject IHttpContextAccessor HttpContextAccessor;
@inject IStringLocalizer<SharedResource> stringLocalizer;
@inject IHtmlLocalizer<SharedResource> htmlLocalizer;
@model ArticleViewModel
@{
	ViewData["Title"] = Html.Raw(Model.ArticleHtmlTitle);
	HostString Hostname = HttpContextAccessor.HttpContext!.Request.Host;
}


<article>
	<h1>@Html.Raw(Model.ArticleTitle)</h1>
	
	@Html.Raw(Model.ArticleText)
</article>
<section style="margin-left:8rem;">
	@if (Model.ArticleCultureLinks != null)
	{
		foreach (var ArticleCultureLink in Model.ArticleCultureLinks)
		{
			string Url = $"https://{ArticleCultureLink.Culture}.{Helpers.GetDomainAndPortFromHostname(Hostname.ToString())}/{ArticleCultureLink.UrlSlug}";

			if (ArticleCultureLink.Culture != Model.Culture)
			{
				<p><a href="@Url">@ArticleCultureLink.Title</a></p>
			}
		}
	}

	@if (Model.ArticleTalkSubjects != null)
	{
		foreach (ArticleTalkSubject ArticleTalkSubject in Model.ArticleTalkSubjects)
		{
			string Url = $"/{Model.UrlSlug}/talk/{ArticleTalkSubject.UrlSlug}";

			<p>
				<svg style="margin-bottom:-1.0rem; margin-right:0.5rem;" fill="#0c0" width="2rem" height="2rem" viewBox="0 0 32 32" version="1.1" xmlns="http://www.w3.org/2000/svg">
					<path d="M30 1.988h-28c-1.105 0-2 0.895-2 2v18.047c0 1.105 0.895 2 2 2h3.986v4.979c0 0.404 0.242 0.767 0.614 0.922 0.125 0.052 0.257 0.078 0.386 0.078 0.258 0 0.51-0.099 0.701-0.287l5.782-5.692h16.532c1.105 0 2-0.895 2-2v-18.047c0-1.104-0.895-2-2-2zM30 22.034h-17.351l-4.664 4.591v-4.591h-5.986v-18.047h28v18.047zM7 14.031h18c0.552 0 1-0.448 1-1s-0.448-1-1-1h-18c-0.552 0-1 0.448-1 1s0.448 1 1 1zM7 10.031h18c0.552 0 1-0.448 1-1s-0.448-1-1-1h-18c-0.552 0-1 0.448-1 1s0.448 1 1 1zM7 18.032h12c0.552 0 1-0.448 1-1s-0.448-1-1-1h-12c-0.552 0-1 0.448-1 1s0.448 1 1 1z"></path>
				</svg><a href="@Url">@ArticleTalkSubject.Subject</a> -- <span style="font-size:small;">@ArticleTalkSubject.DateCreated.ToString("dddd dd MMMM yyyy HH:mm:ss") -- @@@Helpers.ConvertDateTimeToBeatsInternetTime(ArticleTalkSubject.DateCreated)</span>
			</p>
		}
	}
	<br />

	@if (Model.ArticleFound)
	{
		@if (Model.Id is null)
		{
			<a class="btn btn-primary" type="button" role="button" href="/@Model.UrlSlug/edit">Edit This Article</a>
		}

		<a style="margin-left:1rem;" href="/@Model.UrlSlug/history">Edit History</a>
		<br />
		<br />

		<a href="/@Model.UrlSlug/talk">Talk</a>
		<br />

		<br />
	}

	@section ArticleLanguageLinksLinkRelAlternates
	{
		@if (Model.ArticleCultureLinks != null)
		{
			foreach (var ArticleCultureLink in Model.ArticleCultureLinks)
			{
				string Url = $"https://{ArticleCultureLink.Culture}.{Helpers.GetDomainAndPortFromHostname(Hostname.ToString())}/{ArticleCultureLink.UrlSlug}";

				<link rel="alternate" href="@Url" hreflang="@ArticleCultureLink.Culture" />
			}
		}
	}
</section>